{"version":3,"file":"app/es5/iterator.js","sources":["app/es5/iterator.js","@traceur/generated/TemplateParser/2","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/4","@traceur/generated/TemplateParser/5","@traceur/generated/TemplateParser/6","@traceur/generated/TemplateParser/7"],"names":[],"mappings":"AAAA;;AAAA,CAAA,OAAQ,CAAC,UAAU,CAAE,UAAU;AAC3B,CAAA,GAAE,CAAC,6CAA6C,CAAE,UAAU;OAEpD,CAAA,KAAK,EAAG,EAAC;OACT,CAAA,OAAO,EAAG,IAAI,QAAO,EAAE;AAE3B,CAAA,UAAO,aAAa,CAAC,QAAQ,CAAE,SAAQ,CAAE,UAAS,CAAE,QAAO,CAAC,CAAC;SCLpD,GAAA,OACA,CDMY,OAAO,CERlB,eAAe,WAAW,CDET,MAAM,SAAS,CCFa,CDEZ,ACFa,EDEX;CACpC,WAAiB,CACrB,EAAC,CAAC,MAAoB,CAAA,SAAsB,EAAE,CAAC,KAAK;;;;;CDI3B;AAC1B,CAAA,cAAK,GAAI,EAAC,CAAC;SACd;;;AAED,CAAA,SAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;GACzB,CAAC,CAAC;CACN,CAAC,CAAC;AGdC,CAAJ,EAAI,gBHiBJ,SAAM,cAAa,CACH,KAAK,CAAE;AACf,CAAA,KAAI,MAAM,EAAG,MAAK,CAAC;AACnB,CAAA,KAAI,MAAM,EAAG,EAAC,CAAC;CGpBkB,AHqBpC,CGrBoC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC,iBJuBzB,IAAI,CAAJ,UAAK;AACG,CAAJ,MAAI,CAAA,MAAM,EAAG;AAAC,CAAA,UAAK,CAAE,UAAS;AAAE,CAAA,SAAI,CAAE,KAAI;CAAA,IAAC,CAAC;CAE5C,OAAI,IAAI,MAAM,EAAG,CAAA,IAAI,MAAM,OAAO,CAAE;AAChC,CAAA,WAAM,MAAM,EE3BxB,CF2B2B,IAAI,MAAM,CE3BnB,eAAe,WAAW,CF2BN,IAAI,MAAM,CE3Be,CAAC,AF2Bf,CAAC;AACtC,CAAA,WAAM,KAAK,EAAG,MAAK,CAAC;AACpB,CAAA,SAAI,MAAM,GAAI,EAAC,CAAC;KACnB;AAED,CAFC,SAEM,OAAM,CAAC;GACjB,MIjCiF;ADAlF,CAAJ,EAAI,UHoCJ,SAAM,QAAO,CACG,CAAE;AACV,CAAA,KAAI,UAAU,EAAG,GAAE,CAAC;CGtCa,AHuCpC,CGvCoC;ACAzC,CAAA,AAAC,eAAe,YAAY,CAAC;QJyCzB,UAAa,AAAQ;CKxCb,QAAS,GAAA,QAAoB,GAAE;CAAE,aAAoB,EAAC,CACjD,OAAoB,CAAA,SAAS,OAAO,CAAE,OAAmB;ACF1E,CDGc,oBCHC,YAAY,aJA3B,CGGqD,SAAS,CHH5C,eAAe,WAAW,MAAmB,CAAC,CICjB,CDEmC;ALuC1E,CKvC0E,OLuCtE,UAAU,EAAG,CAAA,IAAI,UAAU,OAAO,CAAC,KAAK,CAAC,CAAC;GACjD;;;;+BAEA,CAAA,MAAM,SAAS;QAAhB,UAAkB,CAAE;CAChB,SAAO,IAAI,cAAa,CAAC,IAAI,UAAU,CAAC,CAAA;GAC3C;;;;cI/CiF;CJkDtF","sourcesContent":["describe(\"iterator\", function () {\r\n    it(\"can be built by implmenting Symbol.iterator\", function () {\r\n\r\n        let count = 0;\r\n        let company = new Company();\r\n\r\n        company.addEmployees(\"Jantje\", \"Pietje\", \"Klaasje\", \"Johan\");\r\n\r\n        for (let employee of company) {\r\n            count += 1;\r\n        }\r\n\r\n        expect(count).toBe(4);\r\n    });\r\n});\r\n\r\n\r\nclass ArrayIterator {\r\n    constructor(array) {\r\n        this.array = array;\r\n        this.index = 0;\r\n    }\r\n\r\n    next() {\r\n        var result = {value: undefined, done: true};\r\n\r\n        if (this.index < this.array.length) {\r\n            result.value = this.array[this.index];\r\n            result.done = false;\r\n            this.index += 1;\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n\r\nclass Company {\r\n    constructor() {\r\n        this.employees = [];\r\n    }\r\n\r\n    addEmployees(...names) {\r\n        this.employees = this.employees.concat(names);\r\n    }\r\n\r\n    [Symbol.iterator]() {\r\n        return new ArrayIterator(this.employees)\r\n    }\r\n}\r\n\r\n","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","var $__placeholder__0 = $__placeholder__1","($traceurRuntime.createClass)($__placeholder__0, $__placeholder__1, $__placeholder__2)","\n            for (var $__placeholder__0 = [], $__placeholder__1 = 0;\n                 $__placeholder__2 < arguments.length; $__placeholder__3++)\n              $__placeholder__4[$__placeholder__5] = arguments[$__placeholder__6];","$traceurRuntime.setProperty($__placeholder__0,\n          $__placeholder__1, $__placeholder__2)"]}