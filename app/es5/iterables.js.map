{"version":3,"file":"app/es5/iterables.js","sources":["app/es5/iterables.js","@traceur/generated/TemplateParser/3","@traceur/generated/TemplateParser/2"],"names":[],"mappings":"AAAA;AAAA,CAAA,OAAQ,CAAC,WAAW,CAAE,UAAU,CAAE;AAC9B,CAAA,GAAE,CAAC,wCAAwC,CAAE,UAAU,CAAE;AACrD,CAAA,cAAW,EAAE,CAAC;AACd,CAAA,YAAS,EAAE,CAAC;AACZ,CAAA,wBAAqB,EAAE,CAAC;GAC3B,CAAC,CAAC;CACN,CAAC,CAAC;AAEH,CAAA,OAAQ,CAAC,QAAQ,CAAE,UAAU,CAAE;AAC3B,CAAA,GAAE,CAAC,yCAAyC,CAAE,UAAU,CAAE;AACtD,CAAA,YAAS,EAAE,CAAC;GACf,CAAC,CAAC;CACN,CAAC,CAAC;CACH,OAAS,YAAW,CAAC;KACb,CAAA,GAAG,EAAG,EAAC;KACP,CAAA,OAAO,EAAG,EAAC,CAAC,CAAE,EAAC,CAAE,EAAC,CAAE,EAAC,CAAC;;;;;UAGb,EAAC;YAAE,KAAI,CAAA,OAAO,OAAO,CAAE,KAAG;;;;;aAAE;AACrC,CAAA,cAAG,GCnBX,CDmBe,OAAO,CCnBJ,eAAe,WAAW,CDmBrB,CAAC,CCnBuC,CAAC,ADmBvC,CAAC;WACrB;;;;;;;AAED,CAAA,OAAM,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;CACxB;CAED,OAAS,UAAS,CAAC;KACX,CAAA,GAAG,EAAG,EAAC;KACP,CAAA,OAAO,EAAG,EAAC,CAAC,CAAE,EAAC,CAAE,EAAC,CAAE,EAAC,CAAC;CAG1B,MAAS,GAAA,CAAA,CAAC,CAAA,EAAI,QAAO,CAAE;AACnB,CAAA,MAAG,GC/BX,CD+Be,OAAO,CC/BJ,eAAe,WAAW,CD+BrB,CAAC,CC/BuC,CAAC,AD+BvC,CAAC;GACrB;AAED,CAFC,OAEK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;CACxB;CAED,OAAS,UAAS,CAAC;KACX,CAAA,GAAG,EAAG,EAAC;KACP,CAAA,OAAO,EAAG,EAAC,CAAC,CAAE,EAAC,CAAE,EAAC,CAAE,EAAC,CAAC;CEtCtB,MAAS,GAAA,OACA,CFwCC,OAAO,CC1CP,eAAe,WAAW,CCET,MAAM,SAAS,CDFa,CCEZ,ADFa,ECEX;CACpC,SAAiB,CACrB,EAAC,CAAC,MAAoB,CAAA,SAAsB,EAAE,CAAC,KAAK,GAAI;OFsCxD,EAAC;CAAa;AACnB,CAAA,QAAG,GAAI,EAAC,CAAC;KACZ;GErCI;AFuCL,CEvCK,OFuCC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;CACxB;CAED,OAAS,sBAAqB,CAAC;KACvB,CAAA,GAAG,EAAG,EAAC;KACP,CAAA,OAAO,EAAG,EAAC,CAAC,CAAE,EAAC,CAAE,EAAC,CAAE,EAAC,CAAC;KAEtB,CAAA,QAAQ,EAAG,CAAA,OAAO,OAAO,EAAE;KAC3B,CAAA,IAAI,EAAG,CAAA,QAAQ,KAAK,EAAE;CAE1B,QAAO,CAAC,IAAI,KAAK,CAAE;AACf,CAAA,MAAG,GAAI,CAAA,IAAI,MAAM,CAAC;AAClB,CAAA,OAAI,EAAG,CAAA,QAAQ,KAAK,EAAE,CAAC;GAC1B;AAED,CAFC,OAEK,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;CACxB;CAAA","sourcesContent":["describe(\"iterables\", function () {\r\n    it(\"can work with iterators at a low level\", function () {\r\n        forLoopTest();\r\n        forInTest();\r\n        loopUsingIteratorTest();\r\n    });\r\n});\r\n\r\ndescribe(\"for of\", function () {\r\n    it(\"can work with iterators at a high level\", function () {\r\n        forOfTest();\r\n    });\r\n});\r\nfunction forLoopTest() {\r\n    let sum = 0;\r\n    let numbers = [1, 2, 3, 4];\r\n\r\n    // use index of item\r\n    for (let i = 0; i < numbers.length; i++) {\r\n        sum += numbers[i];\r\n    }\r\n\r\n    expect(sum).toBe(10);\r\n}\r\n\r\nfunction forInTest() {\r\n    let sum = 0;\r\n    let numbers = [1, 2, 3, 4];\r\n\r\n    // use index of item\r\n    for (var i in numbers) {\r\n        sum += numbers[i];\r\n    }\r\n\r\n    expect(sum).toBe(10);\r\n}\r\n\r\nfunction forOfTest() {\r\n    let sum = 0;\r\n    let numbers = [1, 2, 3, 4];\r\n\r\n    // use VALUE of the item\r\n    for (var n of numbers) {\r\n        sum += n;\r\n    }\r\n\r\n    expect(sum).toBe(10);\r\n}\r\n\r\nfunction loopUsingIteratorTest() {\r\n    let sum = 0;\r\n    let numbers = [1, 2, 3, 4];\r\n\r\n    let iterator = numbers.values();\r\n    let next = iterator.next();\r\n\r\n    while (!next.done) {\r\n        sum += next.value;\r\n        next = iterator.next();\r\n    }\r\n\r\n    expect(sum).toBe(10);\r\n}","$__placeholder__0[$traceurRuntime.toProperty($__placeholder__1)]","\n        for (var $__placeholder__0 =\n                 $__placeholder__1[Symbol.iterator](),\n                 $__placeholder__2;\n             !($__placeholder__3 = $__placeholder__4.next()).done; ) {\n          $__placeholder__5;\n          $__placeholder__6;\n        }"]}